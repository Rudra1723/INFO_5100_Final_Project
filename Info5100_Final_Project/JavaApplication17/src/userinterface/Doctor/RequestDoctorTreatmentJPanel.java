/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;

import Business.EcoSystem;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FarmerTreatmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Font;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author rudrapatel
 */
public class RequestDoctorTreatmentJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private DoctorOrganization doctorOrganization;
    /**
     * Creates new form RequestDoctorTreatmentJPanel
     */
    public RequestDoctorTreatmentJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
         JTableHeader header = tblTreatmentRequest.getTableHeader();
        TableCellRenderer rendererFromHeader = header.getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
        header.setFont(new Font("SansSerif", Font.BOLD, 16));
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.doctorOrganization = (DoctorOrganization)organization;
        valueLabel.setText(userAccount.getEmployee().getName());
        populateTable();
    }

    public void populateTable(){
    DefaultTableModel model = (DefaultTableModel)tblTreatmentRequest.getModel();
    
    model.setRowCount(0);
    for(WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()){
        if(request instanceof FarmerTreatmentWorkRequest) {
            FarmerTreatmentWorkRequest ftwr = (FarmerTreatmentWorkRequest) request;
            Object[] row = new Object[5]; // Changed to 5 to store the actual request object
            row[0] = ftwr.getDisease().getDiseaseType() + " - " + ftwr.getDisease().getDiseaseCondition();
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            row[4] = request; // Store the actual request object in hidden column
            model.addRow(row);
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblTreatmentRequest = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnViewRequest = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        tblTreatmentRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Disease", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTreatmentRequest.setRowHeight(25);
        jScrollPane2.setViewportView(tblTreatmentRequest);

        btnAssignToMe.setText("Assign to me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        btnViewRequest.setText("View Request");
        btnViewRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRequestActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 102));

        jLabel5.setFont(new java.awt.Font("Bai Jamjuree", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Doctor Work Area");

        valueLabel.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(255, 255, 255));
        valueLabel.setText("<value>");

        jLabel6.setFont(new java.awt.Font("Helvetica", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Welcome");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(504, 504, 504)
                .addComponent(jLabel5)
                .addContainerGap(594, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(btnAssignToMe))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnViewRequest)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssignToMe, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(330, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    WorkRequest request = null;
    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        
        int rowCount = tblTreatmentRequest.getRowCount();
    
    if(rowCount == 0){
        JOptionPane.showMessageDialog(null, "There is nothing to Assign");
        return;
    }

    int selectedRow = tblTreatmentRequest.getSelectedRow();

    if (selectedRow < 0){
        JOptionPane.showMessageDialog(null, "Please select a row!");
        return;
    }
    
    try {
        // Get the request from the doctorOrganization's work queue using the selected row index
        WorkRequest request = doctorOrganization.getWorkQueue().getWorkRequestList().get(selectedRow);
        
        if(request.getStatus().equalsIgnoreCase("processing") || 
           request.getStatus().equalsIgnoreCase("completed") || 
           request.getStatus().equalsIgnoreCase("rejected")){
            JOptionPane.showMessageDialog(null, "Request is already assigned");
            return;
        } else {
            request.setReceiver(userAccount);
            request.setStatus("Pending");
            populateTable();
            JOptionPane.showMessageDialog(null, "Request assigned successfully!");
        }
    } catch (IndexOutOfBoundsException e) {
        JOptionPane.showMessageDialog(null, "Error: Invalid selection. Please try again.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error assigning request: " + e.getMessage());
    }
 
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnViewRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRequestActionPerformed

         int rowCount = tblTreatmentRequest.getRowCount();
    
    if(rowCount == 0){
        JOptionPane.showMessageDialog(null, "There is nothing to View");
        return;
    }
        
    int selectedRow = tblTreatmentRequest.getSelectedRow();
    
    if (selectedRow < 0){
        JOptionPane.showMessageDialog(null, "Please select a row!");
        return;
    }
    
    try {
        // Get the request from the doctorOrganization's work queue using the selected row index
        WorkRequest workRequest = doctorOrganization.getWorkQueue().getWorkRequestList().get(selectedRow);
        
        // Cast to FarmerTreatmentWorkRequest
        if (!(workRequest instanceof FarmerTreatmentWorkRequest)) {
            JOptionPane.showMessageDialog(null, "Invalid request type selected");
            return;
        }
        
        FarmerTreatmentWorkRequest ft = (FarmerTreatmentWorkRequest) workRequest;
        
        if(ft.getStatus().equalsIgnoreCase("completed")){
            JOptionPane.showMessageDialog(null, "Request is already completed");
            return;
        }
        
        if(ft.getStatus().equalsIgnoreCase("rejected")){    
            JOptionPane.showMessageDialog(null, "Request is already rejected");
            return;
        }
        
        if(ft.getStatus().equalsIgnoreCase("sent") && ft.getReceiver() == null){
            JOptionPane.showMessageDialog(null, "Assign the request first to view it");
            return;
        }
        
        // Check if current user is the receiver
        if(ft.getReceiver() != null && !ft.getReceiver().equals(userAccount)){
            JOptionPane.showMessageDialog(null, "You can only view requests assigned to you");
            return;
        }
        
        ft.setStatus("Processing");
        populateTable(); // Refresh the table to show updated status

        ProcessTreatmentWorkRequestJPanel processTreatmentWorkRequestJPanel = 
            new ProcessTreatmentWorkRequestJPanel(userProcessContainer, ft, business, userAccount);
        userProcessContainer.add("processTreatmentWorkRequestJPanel", processTreatmentWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    } catch (IndexOutOfBoundsException e) {
        JOptionPane.showMessageDialog(null, "Error: Invalid selection. Please try again.");
    } catch (ClassCastException e) {
        JOptionPane.showMessageDialog(null, "Error: Invalid request type selected.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error viewing request: " + e.getMessage());
    }
    }//GEN-LAST:event_btnViewRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnViewRequest;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTreatmentRequest;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
