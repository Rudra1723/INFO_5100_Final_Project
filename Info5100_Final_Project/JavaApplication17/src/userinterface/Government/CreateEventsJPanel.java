/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Government;

import Business.EcoSystem;
import Business.Enterprise.AgricultureEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.FarmerOrganization;
import Business.Organization.OfficerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FarmerEventsWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.joda.time.Months;



/**
 *
 * @author rudrapatel
 */
public class CreateEventsJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private OfficerOrganization organization;
    /**
     * Creates new form CreateEventsJPanel
     */
    public CreateEventsJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.organization = (OfficerOrganization)organization;
        dateChooserEvent.getJCalendar().setMinSelectableDate(new Date());
        dateChooserEvent.setMinSelectableDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtEventName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEventDesc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateChooserEvent = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtEventLocation = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        jLabel2.setText("Event Name:");

        jLabel3.setText("Event Description:");

        txtEventDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEventDescActionPerformed(evt);
            }
        });

        jLabel4.setText("Event Date:");

        jLabel6.setText("Event Location:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(0, 153, 102));
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 153, 102));

        jLabel5.setFont(new java.awt.Font("Bai Jamjuree", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Create Informational Event");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(504, 504, 504)
                .addComponent(jLabel5)
                .addContainerGap(594, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(105, 105, 105)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEventDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateChooserEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEventLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEventDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooserEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEventLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(300, 300, 300))
        );
    }// </editor-fold>//GEN-END:initComponents
    
     public boolean validateStrings(String name){

    Pattern pattern = Pattern.compile("[a-zA-Z0-9 .,#-]*");
    Matcher matcher = pattern.matcher(name);
    if (!matcher.matches()) {
        return false;
    }
    return true;
}
    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        FarmerEventsWorkRequest farmerEventsWorkRequest = new FarmerEventsWorkRequest();
        
        if(txtEventName.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Event Name cannot be empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(!validateStrings(txtEventName.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter valid string value", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(txtEventDesc.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Event Description cannot be empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(!validateStrings(txtEventDesc.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter valid string value", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(dateChooserEvent.getDate() == null){
            JOptionPane.showMessageDialog(null, "Please enter date!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(txtEventLocation.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Event Location cannot be empty!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(!validateStrings(txtEventLocation.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter valid string value For location", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        farmerEventsWorkRequest.setEventName(txtEventName.getText());
        farmerEventsWorkRequest.setEventDesc(txtEventDesc.getText());
        Date eventDate = dateChooserEvent.getDate();
        farmerEventsWorkRequest.setEventDate(eventDate);
        farmerEventsWorkRequest.setLocation(txtEventLocation.getText());
        farmerEventsWorkRequest.setSender(userAccount);
        farmerEventsWorkRequest.setStatus("Sent");
        
        if(txtEventName.getText().equals("") || txtEventDesc.getText().equals("") || eventDate==null || txtEventLocation.getText().equals("") ){
            JOptionPane.showMessageDialog(null, "Fields cannot be empty!");
            return;
        }
        else
        {
        Organization org = null;
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof AgricultureEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof FarmerOrganization) {
                            org = organization;
                            break;
                        }
                    }
                }

            }
        }

        if (org != null) {
            if(userAccount.getWorkQueue().getWorkRequestList().size() == 0){
                org.getWorkQueue().getWorkRequestList().add(farmerEventsWorkRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(farmerEventsWorkRequest);
                
                // Save to database to persist the event
                try {
                    Business.DB4OUtil.DB4OUtil.getInstance().storeSystem(business);
                    JOptionPane.showMessageDialog(null, "You have created event successfully");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Warning: Event created but there was an issue saving to database: " + e.getMessage());
                }
                
                txtEventName.setText("");
                txtEventDesc.setText("");
                txtEventLocation.setText("");
                dateChooserEvent.setCalendar(null);
            }
            else
            {
                for(WorkRequest wr : org.getWorkQueue().getWorkRequestList()){
                    if(wr instanceof FarmerEventsWorkRequest){
                        FarmerEventsWorkRequest farmerEvent = (FarmerEventsWorkRequest)wr;
                        if((farmerEvent.getEventName().equalsIgnoreCase(farmerEventsWorkRequest.getEventName())&&
                                (farmerEvent.getLocation().equalsIgnoreCase(farmerEventsWorkRequest.getLocation())))){
                            JOptionPane.showMessageDialog(null, "Cannot create even with same name,location ");
                            return;
                        }
                    }
                }
               
                org.getWorkQueue().getWorkRequestList().add(farmerEventsWorkRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(farmerEventsWorkRequest);
                
                // Save to database to persist the event
                try {
                    Business.DB4OUtil.DB4OUtil.getInstance().storeSystem(business);
                    JOptionPane.showMessageDialog(null, "You have created event successfully");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Warning: Event created but there was an issue saving to database: " + e.getMessage());
                }
                
                txtEventName.setText("");
                txtEventDesc.setText("");
                txtEventLocation.setText("");
                dateChooserEvent.setCalendar(null);
            }
        }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtEventDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEventDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEventDescActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private com.toedter.calendar.JDateChooser dateChooserEvent;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtEventDesc;
    private javax.swing.JTextField txtEventLocation;
    private javax.swing.JTextField txtEventName;
    // End of variables declaration//GEN-END:variables
}
