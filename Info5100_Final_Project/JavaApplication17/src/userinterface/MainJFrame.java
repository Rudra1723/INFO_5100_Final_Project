/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import Business.EcoSystem;
import Business.DB4OUtil.DB4OUtil;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author rudrapatel
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private EcoSystem ecoSystemInstance;
    private DB4OUtil databaseUtility = DB4OUtil.getInstance();

    public MainJFrame() {
        initializeComponents();
        ecoSystemInstance = databaseUtility.retrieveSystem();
        this.setSize(1680, 1050);
        validateSystemConfiguration();
    }

    private void validateSystemConfiguration() {
        if (ecoSystemInstance == null) {
            JOptionPane.showMessageDialog(null, "System initialization failed. Please restart the application.");
            System.exit(1);
        }
        
        if (!databaseUtility.isDatabaseAccessible()) {
            JOptionPane.showMessageDialog(null, "Database connection failed. Please check system configuration.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initializeComponents() {

        mainSplitPane = new javax.swing.JSplitPane();
        loginPanel = new javax.swing.JPanel();
        authenticateButton = new javax.swing.JButton();
        usernameInputField = new javax.swing.JTextField();
        passwordInputField = new javax.swing.JPasswordField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        loginStatusLabel = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        contentContainer = new javax.swing.JPanel();
        backgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginPanel.setBackground(new java.awt.Color(0, 153, 102));

        authenticateButton.setText("Login");
        authenticateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleAuthenticationButtonClick(evt);
            }
        });

        passwordInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handlePasswordFieldAction(evt);
            }
        });

        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setText("User Name:");

        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password:");

        logoutButton.setText("Logout");
        logoutButton.setEnabled(false);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleLogoutButtonClick(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(passwordInputField, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                        .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(usernameInputField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(loginStatusLabel))
                    .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(logoutButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(authenticateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(usernameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(authenticateButton)
                .addGap(18, 18, 18)
                .addComponent(logoutButton)
                .addGap(9, 9, 9)
                .addComponent(loginStatusLabel)
                .addContainerGap(1032, Short.MAX_VALUE))
        );

        mainSplitPane.setLeftComponent(loginPanel);

        contentContainer.setLayout(new java.awt.CardLayout());

        backgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/og.jpg"))); // NOI18N
        backgroundImageLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                handleBackgroundImagePropertyChange(evt);
            }
        });
        contentContainer.add(backgroundImageLabel, "card2");

        mainSplitPane.setRightComponent(contentContainer);

        getContentPane().add(mainSplitPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void handleAuthenticationButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleAuthenticationButtonClick
        // Get user name
        String enteredUsername = usernameInputField.getText();
        // Get Password
        char[] passwordCharArray = passwordInputField.getPassword();
        String enteredPassword = String.valueOf(passwordCharArray);
        
        //Step1: Check in the system admin user account directory if you have the user
        UserAccount authenticatedUserAccount = ecoSystemInstance.getUserAccountDirectory().authenticateUser(enteredUsername, enteredPassword);
        
        Enterprise targetEnterprise = null;
        Organization targetOrganization = null;
        
        if(authenticatedUserAccount == null){
            //Step 2: Go inside each network and check each enterprise
            for(Network currentNetwork : ecoSystemInstance.getNetworkList()){
                //Step 2.a: check against each enterprise
                for(Enterprise currentEnterprise : currentNetwork.getEnterpriseDirectory().getEnterpriseList()){
                    authenticatedUserAccount = currentEnterprise.getUserAccountDirectory().authenticateUser(enteredUsername, enteredPassword);
                    if(authenticatedUserAccount == null){
                       //Step 3:check against each organization for each enterprise
                       for(Organization currentOrganization : currentEnterprise.getOrganizationDirectory().getOrganizationList()){
                           authenticatedUserAccount = currentOrganization.getUserAccountDirectory().authenticateUser(enteredUsername, enteredPassword);
                           if(authenticatedUserAccount != null){
                               targetEnterprise = currentEnterprise;
                               targetOrganization = currentOrganization;
                               break;
                           }
                       }
                        
                    }
                    else{
                       targetEnterprise = currentEnterprise;
                       break;
                    }
                    if(targetOrganization != null){
                        break;
                    }  
                }
                if(targetEnterprise != null){
                    break;
                }
            }
        }
        
        if(authenticatedUserAccount == null){
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        }
        else{
            CardLayout cardLayout = (CardLayout)contentContainer.getLayout();
            contentContainer.add("workArea", authenticatedUserAccount.getRole().createWorkArea(contentContainer, authenticatedUserAccount, targetOrganization, targetEnterprise, ecoSystemInstance));
            cardLayout.next(contentContainer);
        }
        
        authenticateButton.setEnabled(false);
        logoutButton.setEnabled(true);
    }//GEN-LAST:event_handleAuthenticationButtonClick

    private void handleLogoutButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handleLogoutButtonClick
        // Save current system state to database before logout
        try {
            databaseUtility.storeSystem(ecoSystemInstance);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Warning: There was an issue saving data during logout: " + e.getMessage());
        }
        
        contentContainer.removeAll();
        javax.swing.JLabel jLabel = new javax.swing.JLabel();
        jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/og.jpg"))); // NOI18N
        contentContainer.add(jLabel, "card2");
        
        // Reset to CardLayout
        contentContainer.setLayout(new java.awt.CardLayout());
        
        mainSplitPane.setRightComponent(contentContainer);
        authenticateButton.setEnabled(true);
        logoutButton.setEnabled(false);
    }//GEN-LAST:event_handleLogoutButtonClick

    private void handleBackgroundImagePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_handleBackgroundImagePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_handleBackgroundImagePropertyChange

    private void handlePasswordFieldAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handlePasswordFieldAction
        // TODO add your handling code here:
    }//GEN-LAST:event_handlePasswordFieldAction

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/ui/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentContainer;
    private javax.swing.JLabel backgroundImageLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JSplitPane mainSplitPane;
    private javax.swing.JButton authenticateButton;
    private javax.swing.JLabel loginStatusLabel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPasswordField passwordInputField;
    private javax.swing.JTextField usernameInputField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
